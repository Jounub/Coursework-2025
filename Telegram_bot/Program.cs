using System;
using Telegram.Bot;
using Telegram.Bot.Args;
using Telegram.Bot.Types;

namespace Telegram_bot
{
    class Program
    {
        private static string token { get; set; } = "7706907828:AAG3CzS48IDwnnVhX3ur_qBw_Ys3X2KgII8";
        private static TelegramBotClient client;
        
        static void Main(string[] args)
        {
            client = new TelegramBotClient(token);
            client.OnMessage += OnMessageHandler;
            client.StartReceiving();
            
            Console.WriteLine("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...");
            Console.ReadLine();
            
            client.StopReceiving();
        }

        private static async void OnMessageHandler(object sender, MessageEventArgs e)
        {
            var msg = e.Message;
            
            if (msg.Text != null)
            {
                Console.WriteLine($"–ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {msg.From.FirstName}: {msg.Text}");
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
                switch (msg.Text.Split(' ')[0].ToLower())
                {
                    case "/start":
                        await HandleStartCommand(msg);
                        break;
                        
                    case "/search":
                        await HandleSearchCommand(msg);
                        break;
                        
                    default:
                        await client.SendTextMessageAsync(
                            msg.Chat.Id,
                            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã\n/search - –ø–æ–∏—Å–∫ –≥—Ä—É–ø–ø—ã");
                        break;
                }
            }
        }

        private static async Task HandleStartCommand(Message msg)
        {
            string response = "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.\n\n" +
                             "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
                             "/start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" +
                             "/search [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ø–æ–∏—Å–∫ –≥—Ä—É–ø–ø—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: /search –†–ò–ó)";
            
            await client.SendTextMessageAsync(
                msg.Chat.Id,
                response);
        }

        private static async Task HandleSearchCommand(Message msg)
        {
            string searchQuery = msg.Text.Length > "/search".Length 
                ? msg.Text.Substring("/search".Length).Trim() 
                : string.Empty;

            if (string.IsNullOrEmpty(searchQuery))
            {
                await client.SendTextMessageAsync(
                    msg.Chat.Id,
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–æ–∏—Å–∫–∞.\n–ü—Ä–∏–º–µ—Ä: /search –†–ò–ó");
                return;
            }

            // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –≥—Ä—É–ø–ø
            // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∏–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            string response = $"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É \"{searchQuery}\":\n\n" +
                             "1. –†–ò–ó-200543\n" +
                             "2. –†–ò–ó-200542\n" +
                             "3. –†–ò–ó–ë-200541\n\n" +
                             "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≥—Ä—É–ø–ø—É, –æ—Ç–ø—Ä–∞–≤–∏–≤ –µ—ë –Ω–æ–º–µ—Ä.";
            
            await client.SendTextMessageAsync(
                msg.Chat.Id,
                response);
        }
    }
}
